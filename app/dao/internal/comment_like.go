// ==========================================================================
// This is auto-generated by gf cli tool. DO NOT EDIT THIS FILE MANUALLY.
// ==========================================================================

package internal

import (
	"github.com/gogf/gf/database/gdb"
	"github.com/gogf/gf/frame/g"
	"github.com/gogf/gf/frame/gmvc"
)

// CommentLikeDao is the manager for logic model data accessing
// and custom defined data operations functions management.
type CommentLikeDao struct {
	gmvc.M                     // M is the core and embedded struct that inherits all chaining operations from gdb.Model.
	DB      gdb.DB             // DB is the raw underlying database management object.
	Table   string             // Table is the table name of the DAO.
	Columns commentLikeColumns // Columns contains all the columns of Table that for convenient usage.
}

// CommentLikeColumns defines and stores column names for table comment_like.
type commentLikeColumns struct {
	CommentLikeId   string //
	UserId          string //
	CommentId       string //
	CommentLikeStat string //
	CommentLikeTime string //
	CreateAt        string //
	UpdateAt        string //
}

func NewCommentLikeDao() *CommentLikeDao {
	return &CommentLikeDao{
		M:     g.DB("default").Model("comment_like").Safe(),
		DB:    g.DB("default"),
		Table: "comment_like",
		Columns: commentLikeColumns{
			CommentLikeId:   "comment_like_id",
			UserId:          "user_id",
			CommentId:       "comment_id",
			CommentLikeStat: "comment_like_stat",
			CommentLikeTime: "comment_like_time",
			CreateAt:        "create_at",
			UpdateAt:        "update_at",
		},
	}
}
