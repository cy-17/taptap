// ==========================================================================
// This is auto-generated by gf cli tool. DO NOT EDIT THIS FILE MANUALLY.
// ==========================================================================

package internal

import (
	"github.com/gogf/gf/database/gdb"
	"github.com/gogf/gf/frame/g"
	"github.com/gogf/gf/frame/gmvc"
)

// GameDao is the manager for logic model data accessing
// and custom defined data operations functions management.
type GameDao struct {
	gmvc.M              // M is the core and embedded struct that inherits all chaining operations from gdb.Model.
	DB      gdb.DB      // DB is the raw underlying database management object.
	Table   string      // Table is the table name of the DAO.
	Columns gameColumns // Columns contains all the columns of Table that for convenient usage.
}

// GameColumns defines and stores column names for table game.
type gameColumns struct {
	GameId         string //
	GameName       string //
	ReleaseAt      string //
	Author         string //
	Introduction   string //
	Classification string //
	CoverImage     string //
	DetailImages   string //
	Tags           string //
}

func NewGameDao() *GameDao {
	return &GameDao{
		M:     g.DB("default").Model("game").Safe(),
		DB:    g.DB("default"),
		Table: "game",
		Columns: gameColumns{
			GameId:         "game_id",
			GameName:       "game_name",
			ReleaseAt:      "release_at",
			Author:         "author",
			Introduction:   "introduction",
			Classification: "classification",
			CoverImage:     "cover_image",
			DetailImages:   "detail_images",
			Tags:           "tags",
		},
	}
}
