// ==========================================================================
// This is auto-generated by gf cli tool. DO NOT EDIT THIS FILE MANUALLY.
// ==========================================================================

package internal

import (
	"github.com/gogf/gf/database/gdb"
	"github.com/gogf/gf/frame/g"
	"github.com/gogf/gf/frame/gmvc"
)

// GameCommentDao is the manager for logic model data accessing
// and custom defined data operations functions management.
type GameCommentDao struct {
	gmvc.M                     // M is the core and embedded struct that inherits all chaining operations from gdb.Model.
	DB      gdb.DB             // DB is the raw underlying database management object.
	Table   string             // Table is the table name of the DAO.
	Columns gameCommentColumns // Columns contains all the columns of Table that for convenient usage.
}

// GameCommentColumns defines and stores column names for table game_comment.
type gameCommentColumns struct {
	CommentId string //
	UserId    string //
	GameId    string //
	RepliedId string //
	Pid       string //
	Content   string //
	CreateAt  string //
	Score     string //
}

func NewGameCommentDao() *GameCommentDao {
	return &GameCommentDao{
		M:     g.DB("default").Model("game_comment").Safe(),
		DB:    g.DB("default"),
		Table: "game_comment",
		Columns: gameCommentColumns{
			CommentId: "comment_id",
			UserId:    "user_id",
			GameId:    "game_id",
			RepliedId: "replied_id",
			Pid:       "pid",
			Content:   "content",
			CreateAt:  "create_at",
			Score:     "score",
		},
	}
}
