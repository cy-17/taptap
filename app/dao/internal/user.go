// ==========================================================================
// This is auto-generated by gf cli tool. DO NOT EDIT THIS FILE MANUALLY.
// ==========================================================================

package internal

import (
	"github.com/gogf/gf/database/gdb"
	"github.com/gogf/gf/frame/g"
	"github.com/gogf/gf/frame/gmvc"
)

// UserDao is the manager for logic model data accessing
// and custom defined data operations functions management.
type UserDao struct {
	gmvc.M              // M is the core and embedded struct that inherits all chaining operations from gdb.Model.
	DB      gdb.DB      // DB is the raw underlying database management object.
	Table   string      // Table is the table name of the DAO.
	Columns userColumns // Columns contains all the columns of Table that for convenient usage.
}

// UserColumns defines and stores column names for table user.
type userColumns struct {
	UserId       string //
	Sex          string //
	Nickname     string //
	Avatar       string // 用户头像地址，考虑实现
	Password     string //
	Phone        string //
	Introduction string //
	Location     string //
	Birthday     string //
	LastAccessAt string //
	CreateAt     string //
	Passport     string //
}

func NewUserDao() *UserDao {
	return &UserDao{
		M:     g.DB("default").Model("user").Safe(),
		DB:    g.DB("default"),
		Table: "user",
		Columns: userColumns{
			UserId:       "user_id",
			Sex:          "sex",
			Nickname:     "nickname",
			Avatar:       "avatar",
			Password:     "password",
			Phone:        "phone",
			Introduction: "introduction",
			Location:     "location",
			Birthday:     "birthday",
			LastAccessAt: "last_access_at",
			CreateAt:     "create_at",
			Passport:     "passport",
		},
	}
}
